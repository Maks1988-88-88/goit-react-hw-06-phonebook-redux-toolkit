{"version":3,"sources":["components/App/App.module.css","components/ContactForm/ContactForm.module.css","redux/slices/contacts.js","redux/slices/filter.js","redux/store/index.js","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","contactsSlice","createSlice","name","initialState","id","number","reducers","addContacts","state","action","localStorage","setItem","JSON","stringify","payload","deleteContacts","contact","filter","actions","filterSlice","filterContacts","rootReducer","contacts","store","configureStore","reducer","devTools","process","Section","title","children","ContactForm","useState","setNumber","setName","dispatch","useDispatch","useSelector","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","some","alert","nanoid","type","pattern","required","onChange","className","s","btn","ContactList","contactsList","toLowerCase","includes","filtersContacts","list","map","el","posBtn","text","onClick","Filter","console","log","App","wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6d2bf54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__-h3c5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactForm_btn__2MzOs\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst contactsSlice = createSlice({\r\n  name: 'conacts',\r\n  initialState: [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ],\r\n  reducers: {\r\n    addContacts: (state, action) => {\r\n      localStorage.setItem(\r\n        'contacts',\r\n        JSON.stringify([...state, action.payload]),\r\n      );\r\n      return [...state, action.payload];\r\n    },\r\n    deleteContacts: (state, action) => {\r\n      const contact = state.filter(contact => contact.id !== action.payload);\r\n      localStorage.setItem('contacts', JSON.stringify(contact));\r\n      return contact;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n// export const filterSlice = createSlice({\r\n//   name: 'filter',\r\n//   initialState: '',\r\n//   reducers: {\r\n//     filterContacts: (state, action) => action.payload,\r\n//   },\r\n// });\r\n\r\nexport const { addContacts, deleteContacts } = contactsSlice.actions;\r\nexport default contactsSlice.reducer;\r\n\r\n\r\n\r\n// export const { filterContacts } = filterSlice.actions;\r\n\r\n// export default filterSlice.reducer;\r\n\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const filterSlice = createSlice({\r\n  name: 'filter',\r\n  initialState: '',\r\n  reducers: {\r\n    filterContacts: (state, action) => action.payload,\r\n  },\r\n});\r\n\r\nexport const { filterContacts } = filterSlice.actions;\r\nexport default filterSlice.reducer;","// import { createStore } from 'redux';\r\n// import { devToolsEnhancer } from 'redux-devtools-extension';\r\n// import { rootReducer } from 'redux/reducers/index';\r\n\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n// export default store;\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport  contacts from 'redux/slices/contacts';\r\nimport filter from 'redux/slices/filter';\r\n\r\n\r\nconst rootReducer = {\r\n  contacts,\r\n  filter,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { addContacts } from 'redux/actions/contacts';\r\nimport { addContacts } from 'redux/slices/contacts';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport s from 'components/ContactForm/ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [number, setNumber] = useState('');\r\n  const [name, setName] = useState('');\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n    } else {\r\n      dispatch(addContacts({ id: nanoid(10), name, number }));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <h2>Name</h2>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        <h2>Number</h2>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </div>\r\n      <button className={s.btn}>Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n","// import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// import { deleteContacts } from 'redux/actions/contacts';\r\nimport { deleteContacts } from 'redux/slices/contacts';\r\n\r\n\r\nimport s from 'components/ContactList/ContactList.module.css';\r\n\r\nconst filtersContacts = (contacts, filter) =>\r\n  contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n  const dispatch = useDispatch();\r\n  const contactsList = filtersContacts(contacts, filter);\r\n\r\n  const deleteItem = id => {\r\n    dispatch(deleteContacts(id));\r\n  };\r\n\r\n  return (\r\n    <ol className={s.list}>\r\n      {contactsList.map(el => (\r\n        <li key={el.id}>\r\n          <p className={s.posBtn}>\r\n            <span className={s.text}>\r\n              {el.name}: {el.number}\r\n            </span>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => deleteItem(el.id)}\r\n              className={s.btn}\r\n            >\r\n              Delete\r\n            </button>\r\n          </p>\r\n        </li>\r\n      ))}\r\n    </ol>\r\n  );\r\n}\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.array.isRequired,\r\n//   onDelete: PropTypes.func.isRequired,\r\n// };\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { filterContacts } from 'redux/slices/filter';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts);\r\n  const filter = useSelector(state => state.filter);\r\n\r\n  const changeFilter = e => {\r\n    console.log(e.currentTarget.value);\r\n    let value = e.currentTarget.value;\r\n    dispatch(filterContacts(value));\r\n\r\n  };\r\n\r\n  return (\r\n    <label>\r\n      <input type=\"text\" onChange={changeFilter} />\r\n    </label>\r\n  );\r\n}\r\n\r\n// Filter.propTypes = {\r\n//   value: PropTypes.string.isRequired,\r\n//   onChange: PropTypes.func.isRequired,\r\n// };\r\n","import s from 'components/App/App.module.css';\n// import React, { useState, useEffect } from 'react';\nimport Section from 'components/Section/Section';\nimport ContactForm from 'components/ContactForm/ContactForm';\n// import { nanoid } from 'nanoid';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\n\nexport default function App() {\n\n  return (\n    <div className={s.wrapper}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter/>\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from 'redux/store/index';\nimport './index.css';\nimport App from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n     </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2A9jY\",\"text\":\"ContactList_text__2D0nk\",\"btn\":\"ContactList_btn__3Dvz9\"};"],"sourceRoot":""}